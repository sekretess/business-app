spring:
  application:
    name: sekretess-business-app
  h2:
    console:
      enabled: false
      path: /h2-ui
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:h2:file:./sekretess-business-app-db}
    driverClassName: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    generate-ddl: true
    defer-datasource-initialization: true
  rabbitmq:
    ssl:
      enabled: true



app:
  config:
    username: ${BUSINESS_USER_NAME:sekretess_test}
    server:
      business:
        url: ${SEKRETESS_BUSINESS_SERVER_URL:https://business.sekretess.net}
      consumer:
        url: ${SEKRETESS_CONSUMER_SERVER_URL:https://consumer.sekretess.io}
    idp:
      url: ${IDENTITY_PROVIDER_URL:https://auth.sekretess.net/realms/business/protocol/openid-connect/token}
      clientId: ${IDP_CLIENT_ID:business_client}
      certificate: ${USER_CERTIFICATE_PATH:path_to_client_cert/client.crt}
      key: ${USER_CERTIFICATE_KEY:path_to_client_key/client.key}
      password: ${USER_CERTIFICATE_PASSWORD:test}
    rabbitmq:
      host: ${AMQP_HOST:mq.sekretess.net}
      port: ${AMQP_PORT:5671}
      vhost: ${AMQP_VIRTUAL_HOST:sekretess}



